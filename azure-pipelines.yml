# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

jobs:

  - job: lint
    displayName: lint
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run lint
      displayName: 'npm install and lint'

  - job: ut
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-latest'
        #mac:
        # imageName: 'macOS-latest'
        windows:
          imageName: 'windows-latest'
    displayName: ut
    pool:
      vmImage: $(imageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm ci
        npm test
      displayName: 'npm ci'

  - job: e2eTestNetwork
    displayName: e2eTestNetworkSample
    dependsOn:
    - ut
    pool:
      vmImage: 'ubuntu-latest'
    steps:
       - script: npm install
         displayName: npmInstall
       - script: curl -vsS https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh | bash
         displayName: downloadFabricSample
       - script: docker pull guoger/tape
         displayName: downloadTape
       - script: cp sample/test-network/prepareConfig.sh fabric-samples/test-network
         displayName: cpPrepareConfig
       - script: cp sample/test-network/config.yaml .
         displayName: cpconfig.yaml
       - script: npm run e2eTestNetwork
         displayName: startEnd2EndTest
       - script: cat ./data/rs.csv
         displayName: checkResult
       - script: cat logger.log
         displayName: checkLog

  - job: e2eMiniFab
    displayName: e2eMiniFabSample
    dependsOn:
    - ut
    pool:
      vmImage: 'ubuntu-latest'
    steps:
       - script: npm install
         displayName: npmInstall
       - script: docker pull guoger/tape
         displayName: downloadTape
       - script: mkdir -p minifabric && cd minifabric &&  curl -o minifab -sL https://tinyurl.com/yxa2q6yr && chmod +x minifab && cd ..
         displayName: download downloadMiniFab
       - script: cp sample/minifab/* minifabric
         displayName: cpPrepareConfig
       - script: npm run e2eMiniFab
         displayName: startEnd2EndTest
       - script: cat ./data/rs.csv
         displayName: checkResult
       - script: cat logger.log
         displayName: checkLog

  - job: releasePage
    dependsOn:
    - e2eTestNetwork
    - e2eMiniFab
    steps:
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'SamYuan1990 (5)'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'gitTag'
          tagPattern: 'v.*'
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'commitBased'